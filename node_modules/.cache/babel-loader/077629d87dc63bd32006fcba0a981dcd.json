{"ast":null,"code":"import _slicedToArray from \"/Users/hofheins/Desktop/projects/hwgame/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hofheins/Desktop/projects/hwgame/src/components/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"./Cards\";\n\nfunction App() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        highCount = _useState4[0],\n        setHighCount = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        shuffledArr = _useState6[0],\n        setArr = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        clickedArr = _useState8[0],\n        setClickedArr = _useState8[1];\n\n  const handleIncrement = id => {\n    let tempArr = [...this.state.clickedArr];\n    let tempCount = this.state.count;\n    let tempHighCount = this.state.highCount;\n    let tempGameMessage;\n    console.log(id);\n\n    if (!tempArr.includes(id)) {\n      tempGameMessage = \"You have chosen wisely\";\n      tempArr.push(id);\n      tempCount++;\n\n      if (tempCount > tempHighCount) {\n        tempHighCount = tempCount;\n      }\n    } else {\n      tempGameMessage = \"You have chosen foolishly, start again.\";\n      tempArr = [];\n      tempCount = 0;\n    }\n\n    setCount(count);\n    setHighCount(highCount);\n    setArr(clickedArr);\n    this.cardRandomizer();\n  };\n\n  cardRandomizer = () => {\n    let randomArr = [];\n    let tempArr = [];\n\n    while (randomArr.length < 12) {\n      let newIndex = Math.floor(Math.random() * 12);\n\n      if (!randomArr.includes(newIndex)) {\n        randomArr.push(newIndex);\n      }\n    }\n\n    for (let i = 0; i < randomArr.length; i++) {\n      tempArr.push(images[randomArr[i]]);\n    }\n\n    this.setState({\n      shuffledArr: tempArr\n    });\n  };\n\n  componentDidMount();\n  {\n    this.cardRandomizer();\n  }\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Cards, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hofheins/Desktop/projects/hwgame/src/components/App.js"],"names":["React","useState","Cards","App","count","setCount","highCount","setHighCount","shuffledArr","setArr","clickedArr","setClickedArr","handleIncrement","id","tempArr","state","tempCount","tempHighCount","tempGameMessage","console","log","includes","push","cardRandomizer","randomArr","length","newIndex","Math","floor","random","i","images","setState","componentDidMount"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACaF,QAAQ,CAAC,CAAD,CADrB;AAAA;AAAA,QACNG,KADM;AAAA,QACCC,QADD;;AAAA,qBAEqBJ,QAAQ,CAAC,CAAD,CAF7B;AAAA;AAAA,QAENK,SAFM;AAAA,QAEKC,YAFL;;AAAA,qBAGiBN,QAAQ,CAAC,EAAD,CAHzB;AAAA;AAAA,QAGNO,WAHM;AAAA,QAGOC,MAHP;;AAAA,qBAIuBR,QAAQ,CAAC,EAAD,CAJ/B;AAAA;AAAA,QAINS,UAJM;AAAA,QAIMC,aAJN;;AAMb,QAAMC,eAAe,GAAGC,EAAE,IAAI;AAC5B,QAAIC,OAAO,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWL,UAAf,CAAd;AACA,QAAIM,SAAS,GAAG,KAAKD,KAAL,CAAWX,KAA3B;AACA,QAAIa,aAAa,GAAG,KAAKF,KAAL,CAAWT,SAA/B;AACA,QAAIY,eAAJ;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;;AAEA,QAAI,CAACC,OAAO,CAACO,QAAR,CAAiBR,EAAjB,CAAL,EAA2B;AACzBK,MAAAA,eAAe,GAAG,wBAAlB;AACAJ,MAAAA,OAAO,CAACQ,IAAR,CAAaT,EAAb;AACAG,MAAAA,SAAS;;AAET,UAAIA,SAAS,GAAGC,aAAhB,EAA+B;AAC7BA,QAAAA,aAAa,GAAGD,SAAhB;AACD;AACF,KARD,MAQO;AACLE,MAAAA,eAAe,GAAG,yCAAlB;AACAJ,MAAAA,OAAO,GAAG,EAAV;AACAE,MAAAA,SAAS,GAAG,CAAZ;AACD;;AAEDX,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,IAAAA,MAAM,CAACC,UAAD,CAAN;AAEA,SAAKa,cAAL;AACD,GA3BD;;AA6BAA,EAAAA,cAAc,GAAG,MAAM;AACrB,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIV,OAAO,GAAG,EAAd;;AAEA,WAAOU,SAAS,CAACC,MAAV,GAAmB,EAA1B,EAA8B;AAC5B,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAf;;AAEA,UAAI,CAACL,SAAS,CAACH,QAAV,CAAmBK,QAAnB,CAAL,EAAmC;AACjCF,QAAAA,SAAS,CAACF,IAAV,CAAeI,QAAf;AACD;AACF;;AAED,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,SAAS,CAACC,MAA9B,EAAsCK,CAAC,EAAvC,EAA2C;AACzChB,MAAAA,OAAO,CAACQ,IAAR,CAAaS,MAAM,CAACP,SAAS,CAACM,CAAD,CAAV,CAAnB;AACD;;AAED,SAAKE,QAAL,CAAc;AAAExB,MAAAA,WAAW,EAAEM;AAAf,KAAd;AACD,GAjBD;;AAmBAmB,EAAAA,iBAAiB;AACjB;AACE,SAAKV,cAAL;AACD;AAED,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAepB,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"./Cards\";\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [highCount, setHighCount] = useState(0);\n  const [shuffledArr, setArr] = useState([]);\n  const [clickedArr, setClickedArr] = useState([]);\n\n  const handleIncrement = id => {\n    let tempArr = [...this.state.clickedArr];\n    let tempCount = this.state.count;\n    let tempHighCount = this.state.highCount;\n    let tempGameMessage;\n\n    console.log(id);\n\n    if (!tempArr.includes(id)) {\n      tempGameMessage = \"You have chosen wisely\";\n      tempArr.push(id);\n      tempCount++;\n\n      if (tempCount > tempHighCount) {\n        tempHighCount = tempCount;\n      }\n    } else {\n      tempGameMessage = \"You have chosen foolishly, start again.\";\n      tempArr = [];\n      tempCount = 0;\n    }\n\n    setCount(count);\n    setHighCount(highCount);\n    setArr(clickedArr);\n\n    this.cardRandomizer();\n  };\n\n  cardRandomizer = () => {\n    let randomArr = [];\n    let tempArr = [];\n\n    while (randomArr.length < 12) {\n      let newIndex = Math.floor(Math.random() * 12);\n\n      if (!randomArr.includes(newIndex)) {\n        randomArr.push(newIndex);\n      }\n    }\n\n    for (let i = 0; i < randomArr.length; i++) {\n      tempArr.push(images[randomArr[i]]);\n    }\n\n    this.setState({ shuffledArr: tempArr });\n  };\n\n  componentDidMount();\n  {\n    this.cardRandomizer();\n  }\n\n  return (\n    <div className='container'>\n      <Cards />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}