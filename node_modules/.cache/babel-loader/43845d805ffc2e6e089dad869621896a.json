{"ast":null,"code":"import _slicedToArray from \"/Users/hofheins/Desktop/projects/hwgame/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Images } from \"./Images\";\nexport default function Cards() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState({\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        friend = _useState4[0],\n        setFriend = _useState4[1];\n\n  const imageArray = async () => {\n    const res = await {\n      Images\n    };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const shuffleFriends = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"centerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, image.map(image => React.createElement(\"div\", {\n    key: image.name,\n    className: \"card\",\n    onClick: () => {\n      shuffleFriends();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    // ref={ref}\n    className: \"cardImage\",\n    src: image.cardImage,\n    alt: \"hi\",\n    id: image.navItemId // alt={image.name}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js"],"names":["React","useState","useEffect","Images","Cards","image","setImage","currentScore","topScore","rightWrong","clicked","friend","setFriend","imageArray","res","copyarray","shuffleFriends","newarr","slice","sort","Math","random","map","name","cardImage","navItemId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,oBACJH,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACvBI,KADuB;AAAA,QAChBC,QADgB;;AAAA,qBAGFL,QAAQ,CAAC;AACnCM,IAAAA,YAAY,EAAE,CADqB;AAEnCC,IAAAA,QAAQ,EAAE,CAFyB;AAGnCC,IAAAA,UAAU,EAAE,EAHuB;AAInCC,IAAAA,OAAO,EAAE;AAJ0B,GAAD,CAHN;AAAA;AAAA,QAGvBC,MAHuB;AAAA,QAGfC,SAHe;;AAU9B,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAM;AAAEX,MAAAA;AAAF,KAAlB;AACA,UAAMY,SAAS,GAAGD,GAAG,CAACX,MAAtB;AACAG,IAAAA,QAAQ,CAACS,SAAD,CAAR;AACD,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,cAAc,GAAG,MAAM;AAC3B,UAAMC,MAAM,GAAG,CAAC,GAAGZ,KAAJ,CAAf;AACAY,IAAAA,MAAM,CAACC,KAAP;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAY,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC;AACAf,IAAAA,QAAQ,CAACW,MAAD,CAAR;AACD,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,KAAK,CAACiB,GAAN,CAAUjB,KAAK,IACd;AACE,IAAA,GAAG,EAAEA,KAAK,CAACkB,IADb;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACbP,MAAAA,cAAc;AACf,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AACE;AACA,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,GAAG,EAAEX,KAAK,CAACmB,SAHb;AAIE,IAAA,GAAG,EAAC,IAJN;AAKE,IAAA,EAAE,EAAEnB,KAAK,CAACoB,SALZ,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CADH,CADF;AAqBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Images } from \"./Images\";\n\nexport default function Cards() {\n  const [image, setImage] = useState([]);\n\n  const [friend, setFriend] = useState({\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: []\n  });\n\n  const imageArray = async () => {\n    const res = await { Images };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const shuffleFriends = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  return (\n    <div className='centerContainer'>\n      {image.map(image => (\n        <div\n          key={image.name}\n          className='card'\n          onClick={() => {\n            shuffleFriends();\n          }}>\n          <img\n            // ref={ref}\n            className='cardImage'\n            src={image.cardImage}\n            alt='hi'\n            id={image.navItemId}\n            // alt={image.name}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}