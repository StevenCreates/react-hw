{"ast":null,"code":"import _slicedToArray from \"/Users/hofheins/Desktop/projects/hwgame/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js\";\nimport React, { useState, useEffect, useRef, useReducer, useCallback } from \"react\";\nimport { Images } from \"./Images\";\nexport default function Cards() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState({\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 1),\n        newGame = _useState4[0];\n\n  const handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({\n        clicked: this.state.clicked.concat(id)\n      });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  const imageArray = async () => {\n    const res = await {\n      Images\n    };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const game = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"centerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, image.map(image => React.createElement(\"div\", {\n    key: image.name,\n    className: \"card\",\n    onClick: () => {\n      game();\n      handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    // ref={ref}\n    className: \"cardImage\",\n    src: image.cardImage,\n    alt: \"hi\",\n    id: image.navItemId // alt={image.name}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js"],"names":["React","useState","useEffect","useRef","useReducer","useCallback","Images","Cards","image","setImage","currentScore","topScore","rightWrong","clicked","newGame","handleClick","id","state","indexOf","handleIncrement","setState","concat","handleReset","imageArray","res","copyarray","game","newarr","slice","sort","Math","random","map","name","cardImage","navItemId"],"mappings":";;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,UAJF,EAKEC,WALF,QAMO,OANP;AAOA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,oBACJN,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACvBO,KADuB;AAAA,QAChBC,QADgB;;AAAA,qBAGZR,QAAQ,CAAC;AACzBS,IAAAA,YAAY,EAAE,CADW;AAEzBC,IAAAA,QAAQ,EAAE,CAFe;AAGzBC,IAAAA,UAAU,EAAE,EAHa;AAIzBC,IAAAA,OAAO,EAAE;AAJgB,GAAD,CAHI;AAAA;AAAA,QAGvBC,OAHuB;;AAU9B,QAAMC,WAAW,GAAGC,EAAE,IAAI;AACxB,QAAI,KAAKC,KAAL,CAAWJ,OAAX,CAAmBK,OAAnB,CAA2BF,EAA3B,MAAmC,CAAC,CAAxC,EAA2C;AACzC,WAAKG,eAAL;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE,KAAKI,KAAL,CAAWJ,OAAX,CAAmBQ,MAAnB,CAA0BL,EAA1B;AAAX,OAAd;AACD,KAHD,MAGO;AACL,WAAKM,WAAL;AACD;AACF,GAPD;;AASA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAM;AAAElB,MAAAA;AAAF,KAAlB;AACA,UAAMmB,SAAS,GAAGD,GAAG,CAAClB,MAAtB;AACAG,IAAAA,QAAQ,CAACgB,SAAD,CAAR;AACD,GAJD;;AAMAvB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,IAAI,GAAG,MAAM;AACjB,UAAMC,MAAM,GAAG,CAAC,GAAGnB,KAAJ,CAAf;AACAmB,IAAAA,MAAM,CAACC,KAAP;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAY,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC;AACAtB,IAAAA,QAAQ,CAACkB,MAAD,CAAR;AACD,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,KAAK,CAACwB,GAAN,CAAUxB,KAAK,IACd;AACE,IAAA,GAAG,EAAEA,KAAK,CAACyB,IADb;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACbP,MAAAA,IAAI;AACJX,MAAAA,WAAW;AACZ,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AACE;AACA,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,GAAG,EAAEP,KAAK,CAAC0B,SAHb;AAIE,IAAA,GAAG,EAAC,IAJN;AAKE,IAAA,EAAE,EAAE1B,KAAK,CAAC2B,SALZ,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADD,CADH,CADF;AAsBD","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useRef,\n  useReducer,\n  useCallback\n} from \"react\";\nimport { Images } from \"./Images\";\n\nexport default function Cards() {\n  const [image, setImage] = useState([]);\n\n  const [newGame] = useState({\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: []\n  });\n\n  const handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  const imageArray = async () => {\n    const res = await { Images };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const game = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  return (\n    <div className='centerContainer'>\n      {image.map(image => (\n        <div\n          key={image.name}\n          className='card'\n          onClick={() => {\n            game();\n            handleClick();\n          }}>\n          <img\n            // ref={ref}\n            className='cardImage'\n            src={image.cardImage}\n            alt='hi'\n            id={image.navItemId}\n            // alt={image.name}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}