{"ast":null,"code":"import _slicedToArray from \"/Users/hofheins/Desktop/projects/hwgame/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Images } from \"./Images\";\nexport default function Cards() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentScore = _useState4[0],\n        setScore = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        topScore = _useState6[0],\n        setHigh = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        rightWrong = _useState8[0],\n        setrightWrong = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        clicked = _useState10[0],\n        setClicked = _useState10[1];\n\n  const ref = useRef(); // const handleReset = () => {\n  //   setScore(currentScore);\n  //   setrightWrong(\"poop\");\n  //   setClicked([]);\n  //   shuffleFriends();\n  // };\n\n  const imageArray = async () => {\n    const res = await {\n      Images\n    };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []); // const handleIncrement = () => {\n  //   const newScore = this.state.currentScore + 1;\n  //   this.setState({\n  //     currentScore: newScore,\n  //     rightWrong: \"\"\n  //   });\n  //   if (newScore >= this.state.topScore) {\n  //     this.setState({ topScore: newScore });\n  //   } else if (newScore === 12) {\n  //     this.setState({ rightWrong: \"You win!\" });\n  //   }\n  //   this.handleShuffle();\n  // };\n\n  const shuffleFriends = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  function handleClick(id) {\n    console.log(this.state); // console.log(image);\n    // console.log({ id });\n    // console.log(this.indexOf(id));\n    // if (this.indexOf(id) === -1) {\n    //   this.handleIncrement();\n    //   this.setState({ clicked: this.state.clicked.concat(id) });\n    // } else {\n    //   this.handleReset();\n    // }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"centerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, image.map(image => React.createElement(\"div\", {\n    key: image.name,\n    className: \"card\",\n    onClick: () => {\n      shuffleFriends();\n      handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    // ref={ref}\n    className: \"cardImage\",\n    src: image.cardImage,\n    alt: \"hi\",\n    id: image.navItemId // alt={image.name}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js"],"names":["React","useState","useEffect","useRef","Images","Cards","image","setImage","currentScore","setScore","topScore","setHigh","rightWrong","setrightWrong","clicked","setClicked","ref","imageArray","res","copyarray","shuffleFriends","newarr","slice","sort","Math","random","handleClick","id","console","log","state","map","name","cardImage","navItemId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,oBACJJ,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACvBK,KADuB;AAAA,QAChBC,QADgB;;AAAA,qBAEGN,QAAQ,CAAC,CAAD,CAFX;AAAA;AAAA,QAEvBO,YAFuB;AAAA,QAETC,QAFS;;AAAA,qBAGFR,QAAQ,CAAC,CAAD,CAHN;AAAA;AAAA,QAGvBS,QAHuB;AAAA,QAGbC,OAHa;;AAAA,qBAIMV,QAAQ,CAAC,EAAD,CAJd;AAAA;AAAA,QAIvBW,UAJuB;AAAA,QAIXC,aAJW;;AAAA,qBAKAZ,QAAQ,CAAC,EAAD,CALR;AAAA;AAAA,QAKvBa,OALuB;AAAA,QAKdC,UALc;;AAM9B,QAAMC,GAAG,GAAGb,MAAM,EAAlB,CAN8B,CAQ9B;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMc,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAM;AAAEd,MAAAA;AAAF,KAAlB;AACA,UAAMe,SAAS,GAAGD,GAAG,CAACd,MAAtB;AACAG,IAAAA,QAAQ,CAACY,SAAD,CAAR;AACD,GAJD;;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT,CArB8B,CAyB9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMG,cAAc,GAAG,MAAM;AAC3B,UAAMC,MAAM,GAAG,CAAC,GAAGf,KAAJ,CAAf;AACAe,IAAAA,MAAM,CAACC,KAAP;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAY,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC;AACAlB,IAAAA,QAAQ,CAACc,MAAD,CAAR;AACD,GALD;;AAOA,WAASK,WAAT,CAAqBC,EAArB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EADuB,CAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,KAAK,CAACyB,GAAN,CAAUzB,KAAK,IACd;AACE,IAAA,GAAG,EAAEA,KAAK,CAAC0B,IADb;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACbZ,MAAAA,cAAc;AACdM,MAAAA,WAAW;AACZ,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AACE;AACA,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,GAAG,EAAEpB,KAAK,CAAC2B,SAHb;AAIE,IAAA,GAAG,EAAC,IAJN;AAKE,IAAA,EAAE,EAAE3B,KAAK,CAAC4B,SALZ,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADD,CADH,CADF;AAsBD","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Images } from \"./Images\";\n\nexport default function Cards() {\n  const [image, setImage] = useState([]);\n  const [currentScore, setScore] = useState(0);\n  const [topScore, setHigh] = useState(0);\n  const [rightWrong, setrightWrong] = useState(\"\");\n  const [clicked, setClicked] = useState([]);\n  const ref = useRef();\n\n  // const handleReset = () => {\n  //   setScore(currentScore);\n  //   setrightWrong(\"poop\");\n  //   setClicked([]);\n  //   shuffleFriends();\n  // };\n\n  const imageArray = async () => {\n    const res = await { Images };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  // const handleIncrement = () => {\n  //   const newScore = this.state.currentScore + 1;\n  //   this.setState({\n  //     currentScore: newScore,\n  //     rightWrong: \"\"\n  //   });\n  //   if (newScore >= this.state.topScore) {\n  //     this.setState({ topScore: newScore });\n  //   } else if (newScore === 12) {\n  //     this.setState({ rightWrong: \"You win!\" });\n  //   }\n  //   this.handleShuffle();\n  // };\n\n  const shuffleFriends = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  function handleClick(id) {\n    console.log(this.state);\n    // console.log(image);\n    // console.log({ id });\n    // console.log(this.indexOf(id));\n    // if (this.indexOf(id) === -1) {\n    //   this.handleIncrement();\n    //   this.setState({ clicked: this.state.clicked.concat(id) });\n    // } else {\n    //   this.handleReset();\n    // }\n  }\n\n  return (\n    <div className='centerContainer'>\n      {image.map(image => (\n        <div\n          key={image.name}\n          className='card'\n          onClick={() => {\n            shuffleFriends();\n            handleClick();\n          }}>\n          <img\n            // ref={ref}\n            className='cardImage'\n            src={image.cardImage}\n            alt='hi'\n            id={image.navItemId}\n            // alt={image.name}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}