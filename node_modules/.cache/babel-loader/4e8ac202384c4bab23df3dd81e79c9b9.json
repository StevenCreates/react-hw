{"ast":null,"code":"import _slicedToArray from \"/Users/hofheins/Desktop/projects/hwgame/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js\";\nimport React, { useState, useEffect, useRef, useReducer } from \"react\";\nimport { Images } from \"./Images\";\nexport default function Cards() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const imageArray = async () => {\n    const res = await {\n      Images\n    };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const game = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  }; // const [isselected, setSelected] = useState({\n  //   points: 0,\n  //   selected: false\n  // });\n\n\n  const _useState3 = useState({\n    attr: \"ntoth\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isselected = _useState4[0],\n        setSelected = _useState4[1]; // const ref = useRef();\n  // function check(e) {\n  //   let hi = image.target;\n  //   console.log(hi);\n  //   setSelected(prevState => prevState + 1);\n  //   console.log(isselected);\n  // }\n\n\n  const handleClick = event => {\n    const isselected = event.target.isselected; // And do whatever you need with it's value, for example change state\n\n    setSelected({\n      attr: \"bananas\"\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"centerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, image.map(image => React.createElement(\"div\", {\n    key: image.name,\n    isselected: isselected,\n    className: \"card\",\n    onClick: () => {\n      game(); // check();\n\n      handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    // ref={ref}\n    className: \"cardImage\",\n    src: image.cardImage,\n    alt: \"hi\" // alt={image.name}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js"],"names":["React","useState","useEffect","useRef","useReducer","Images","Cards","image","setImage","imageArray","res","copyarray","game","newarr","slice","sort","Math","random","attr","isselected","setSelected","handleClick","event","target","map","name","cardImage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,oBACJL,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACvBM,KADuB;AAAA,QAChBC,QADgB;;AAG9B,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAM;AAAEL,MAAAA;AAAF,KAAlB;AACA,UAAMM,SAAS,GAAGD,GAAG,CAACL,MAAtB;AACAG,IAAAA,QAAQ,CAACG,SAAD,CAAR;AACD,GAJD;;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,IAAI,GAAG,MAAM;AACjB,UAAMC,MAAM,GAAG,CAAC,GAAGN,KAAJ,CAAf;AACAM,IAAAA,MAAM,CAACC,KAAP;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAY,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC;AACAT,IAAAA,QAAQ,CAACK,MAAD,CAAR;AACD,GALD,CAb8B,CAoB9B;AACA;AACA;AACA;;;AAvB8B,qBAyBIZ,QAAQ,CAAC;AAAEiB,IAAAA,IAAI,EAAE;AAAR,GAAD,CAzBZ;AAAA;AAAA,QAyBvBC,UAzBuB;AAAA,QAyBXC,WAzBW,kBA2B9B;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA,UAEfH,UAFe,GAGvBG,KAHuB,CAEzBC,MAFyB,CAEfJ,UAFe,EAK3B;;AACAC,IAAAA,WAAW,CAAC;AAAEF,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAX;AACD,GAPD;;AASA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACiB,GAAN,CAAUjB,KAAK,IACd;AACE,IAAA,GAAG,EAAEA,KAAK,CAACkB,IADb;AAEE,IAAA,UAAU,EAAEN,UAFd;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,OAAO,EAAE,MAAM;AACbP,MAAAA,IAAI,GADS,CAEb;;AACAS,MAAAA,WAAW;AACZ,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE;AACA,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,GAAG,EAAEd,KAAK,CAACmB,SAHb;AAIE,IAAA,GAAG,EAAC,IAJN,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADD,CADH,CADF;AAuBD","sourcesContent":["import React, { useState, useEffect, useRef, useReducer } from \"react\";\nimport { Images } from \"./Images\";\n\nexport default function Cards() {\n  const [image, setImage] = useState([]);\n\n  const imageArray = async () => {\n    const res = await { Images };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const game = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  // const [isselected, setSelected] = useState({\n  //   points: 0,\n  //   selected: false\n  // });\n\n  const [isselected, setSelected] = useState({ attr: \"ntoth\" });\n\n  // const ref = useRef();\n\n  // function check(e) {\n  //   let hi = image.target;\n  //   console.log(hi);\n  //   setSelected(prevState => prevState + 1);\n\n  //   console.log(isselected);\n  // }\n\n  const handleClick = event => {\n    const {\n      target: { isselected }\n    } = event;\n\n    // And do whatever you need with it's value, for example change state\n    setSelected({ attr: \"bananas\" });\n  };\n\n  return (\n    <div className='centerContainer'>\n      {image.map(image => (\n        <div\n          key={image.name}\n          isselected={isselected}\n          className='card'\n          onClick={() => {\n            game();\n            // check();\n            handleClick();\n          }}>\n          <img\n            // ref={ref}\n            className='cardImage'\n            src={image.cardImage}\n            alt='hi'\n            // alt={image.name}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}