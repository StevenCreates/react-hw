{"ast":null,"code":"import _slicedToArray from \"/Users/hofheins/Desktop/projects/hwgame/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Images } from \"./Images\";\n\nconst Cards = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        theid = _useState4[0],\n        setId = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        curid = _useState6[0],\n        setcurID = _useState6[1];\n\n  const imageArray = async () => {\n    const res = await {\n      Images\n    };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const shuffleFriends = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  const testingShit = () => {\n    let hi = image;\n    let two = curid;\n    let three = theid;\n    hi.map(hi => console.log(hi.id));\n    console.log(two);\n    console.log(three);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"centerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, theid), image.map(image => React.createElement(\"div\", {\n    className: \"card\",\n    key: image.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, image.id, React.createElement(\"img\", {\n    ref: this,\n    className: \"cardImage\",\n    src: image.cardImage,\n    alt: \"hi\",\n    id: curid,\n    clicked: image.clicked,\n    onClick: () => {\n      setId([...theid, image.id]);\n      setcurID([image.id]);\n      shuffleFriends();\n      testingShit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))));\n};\n\nexport default Cards;","map":{"version":3,"sources":["/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js"],"names":["React","useState","useEffect","Images","Cards","image","setImage","theid","setId","curid","setcurID","imageArray","res","copyarray","shuffleFriends","newarr","slice","sort","Math","random","testingShit","hi","two","three","map","console","log","id","cardImage","clicked"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,oBACQH,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACXI,KADW;AAAA,QACJC,QADI;;AAAA,qBAEKL,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,QAEXM,KAFW;AAAA,QAEJC,KAFI;;AAAA,qBAGQP,QAAQ,CAAC,CAAD,CAHhB;AAAA;AAAA,QAGXQ,KAHW;AAAA,QAGJC,QAHI;;AAKlB,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAM;AAAET,MAAAA;AAAF,KAAlB;AACA,UAAMU,SAAS,GAAGD,GAAG,CAACT,MAAtB;AACAG,IAAAA,QAAQ,CAACO,SAAD,CAAR;AACD,GAJD;;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,cAAc,GAAG,MAAM;AAC3B,UAAMC,MAAM,GAAG,CAAC,GAAGV,KAAJ,CAAf;AACAU,IAAAA,MAAM,CAACC,KAAP;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAY,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC;AACAb,IAAAA,QAAQ,CAACS,MAAD,CAAR;AACD,GALD;;AAOA,QAAMK,WAAW,GAAG,MAAM;AACxB,QAAIC,EAAE,GAAGhB,KAAT;AACA,QAAIiB,GAAG,GAAGb,KAAV;AACA,QAAIc,KAAK,GAAGhB,KAAZ;AACAc,IAAAA,EAAE,CAACG,GAAH,CAAOH,EAAE,IAAII,OAAO,CAACC,GAAR,CAAYL,EAAE,CAACM,EAAf,CAAb;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,GAPD;;AASA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,KAAJ,CADF,EAEGF,KAAK,CAACmB,GAAN,CAAUnB,KAAK,IACd;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEA,KAAK,CAACsB,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,KAAK,CAACsB,EADT,EAEE;AACE,IAAA,GAAG,EAAE,IADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,GAAG,EAAEtB,KAAK,CAACuB,SAHb;AAIE,IAAA,GAAG,EAAC,IAJN;AAKE,IAAA,EAAE,EAAEnB,KALN;AAME,IAAA,OAAO,EAAEJ,KAAK,CAACwB,OANjB;AAOE,IAAA,OAAO,EAAE,MAAM;AACbrB,MAAAA,KAAK,CAAC,CAAC,GAAGD,KAAJ,EAAWF,KAAK,CAACsB,EAAjB,CAAD,CAAL;AACAjB,MAAAA,QAAQ,CAAC,CAACL,KAAK,CAACsB,EAAP,CAAD,CAAR;AACAb,MAAAA,cAAc;AACdM,MAAAA,WAAW;AACZ,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CAFH,CADF;AAwBD,CAvDD;;AAyDA,eAAehB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Images } from \"./Images\";\n\nconst Cards = () => {\n  const [image, setImage] = useState([]);\n  const [theid, setId] = useState([]);\n  const [curid, setcurID] = useState(0);\n\n  const imageArray = async () => {\n    const res = await { Images };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const shuffleFriends = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  const testingShit = () => {\n    let hi = image;\n    let two = curid;\n    let three = theid;\n    hi.map(hi => console.log(hi.id));\n    console.log(two);\n    console.log(three);\n  };\n\n  return (\n    <div className='centerContainer'>\n      <p>{theid}</p>\n      {image.map(image => (\n        <div className='card' key={image.id}>\n          {image.id}\n          <img\n            ref={this}\n            className='cardImage'\n            src={image.cardImage}\n            alt='hi'\n            id={curid}\n            clicked={image.clicked}\n            onClick={() => {\n              setId([...theid, image.id]);\n              setcurID([image.id]);\n              shuffleFriends();\n              testingShit();\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}