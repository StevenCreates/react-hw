{"ast":null,"code":"import _slicedToArray from \"/Users/hofheins/Desktop/projects/hwgame/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Images } from \"./Images\";\nimport { waitForDomChange } from \"@testing-library/react\";\nexport default function Cards() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        theid = _useState4[0],\n        setId = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        curid = _useState6[0],\n        setcurID = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        status = _useState8[0],\n        setStatus = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        isToggled = _useState10[0],\n        setToggle = _useState10[1];\n\n  const ref = useRef();\n\n  const imageArray = async () => {\n    const res = await {\n      Images\n    };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const shuffleFriends = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  const wtf = () => {\n    console.log(image);\n    console.log(status);\n\n    if (isToggled) {\n      console.log(\"yes\", isToggled);\n    } else {\n      console.log(\"no\", isToggled);\n    }\n  }; // console.log(theid);\n\n\n  return React.createElement(\"div\", {\n    className: \"centerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, theid), image.map(image => React.createElement(\"div\", {\n    className: \"card\",\n    key: image.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, image.id, React.createElement(\"img\", {\n    status: isToggled,\n    ref: ref,\n    className: \"cardImage\",\n    src: image.cardImage,\n    alt: \"hi\",\n    clicked: image.clicked,\n    onClick: () => {\n      setToggle(!isToggled);\n      setId([...theid, image.id]);\n      setcurID([image.id]);\n      shuffleFriends();\n      wtf();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js"],"names":["React","useState","useEffect","useRef","Images","waitForDomChange","Cards","image","setImage","theid","setId","curid","setcurID","status","setStatus","isToggled","setToggle","ref","imageArray","res","copyarray","shuffleFriends","newarr","slice","sort","Math","random","wtf","console","log","map","id","cardImage","clicked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Images } from \"./Images\";\nimport { waitForDomChange } from \"@testing-library/react\";\n\nexport default function Cards() {\n  const [image, setImage] = useState([]);\n  const [theid, setId] = useState([]);\n  const [curid, setcurID] = useState(0);\n  const [status, setStatus] = useState();\n  const [isToggled, setToggle] = useState(false);\n  const ref = useRef();\n\n  const imageArray = async () => {\n    const res = await { Images };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const shuffleFriends = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  const wtf = () => {\n    console.log(image);\n    console.log(status);\n    if (isToggled) {\n      console.log(\"yes\", isToggled);\n    } else {\n      console.log(\"no\", isToggled);\n    }\n  };\n\n  // console.log(theid);\n\n  return (\n    <div className='centerContainer'>\n      <p>{theid}</p>\n      {image.map(image => (\n        <div className='card' key={image.id}>\n          {image.id}\n          <img\n            status={isToggled}\n            ref={ref}\n            className='cardImage'\n            src={image.cardImage}\n            alt='hi'\n            clicked={image.clicked}\n            onClick={() => {\n              setToggle(!isToggled);\n              setId([...theid, image.id]);\n              setcurID([image.id]);\n              shuffleFriends();\n              wtf();\n            }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}