{"ast":null,"code":"import _slicedToArray from \"/Users/hofheins/Desktop/react-hw/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hofheins/Desktop/react-hw/src/components/Cards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport sourceImages from \"./Images\";\nimport Card from \"./Card\";\n\nconst Cards = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        images = _useState2[0],\n        setImages = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        clickedImages = _useState4[0],\n        setClickedImages = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  useEffect(() => {\n    shuffleFriends();\n  }, []);\n\n  const shuffleFriends = () => {\n    const newArray = [...sourceImages];\n    newArray.slice();\n    newArray.sort(() => Math.random() - 0.5);\n    setImages(newArray);\n  };\n\n  const onImageClick = image => {\n    increment();\n\n    if (clickedImages.filter(clickedImage => {\n      return clickedImage === image.id;\n    }).length) {\n      alert(\"Failed: Try Again!\");\n      setCount(0);\n      setClickedImages([]);\n      return;\n    }\n\n    setClickedImages([...clickedImages, image.id]);\n    shuffleFriends();\n  };\n\n  let increment = () => {\n    setCount(count + 1);\n    console.log(clickedImages);\n\n    if (count === 11) {\n      alert(\"You Won!\");\n    }\n\n    console.log(count);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"centerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Memory Game\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Instructions: Click all of the cards and win! Sounds easy right? Well you lose if you select one more than once!\"), React.createElement(\"div\", {\n    className: \"pointContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"points\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Points:\", count)), images.map(image => React.createElement(Card, {\n    key: image.id,\n    image: image,\n    onImageClick: onImageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n};\n\nexport default Cards;","map":{"version":3,"sources":["/Users/hofheins/Desktop/react-hw/src/components/Cards.js"],"names":["React","useState","useEffect","sourceImages","Card","Cards","images","setImages","clickedImages","setClickedImages","count","setCount","shuffleFriends","newArray","slice","sort","Math","random","onImageClick","image","increment","filter","clickedImage","id","length","alert","console","log","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,UAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,oBACUJ,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,QACXK,MADW;AAAA,QACHC,SADG;;AAAA,qBAEwBN,QAAQ,CAAC,EAAD,CAFhC;AAAA;AAAA,QAEXO,aAFW;AAAA,QAEIC,gBAFJ;;AAAA,qBAGQR,QAAQ,CAAC,CAAD,CAHhB;AAAA;AAAA,QAGXS,KAHW;AAAA,QAGJC,QAHI;;AAKlBT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,MAAM;AAC3B,UAAMC,QAAQ,GAAG,CAAC,GAAGV,YAAJ,CAAjB;AACAU,IAAAA,QAAQ,CAACC,KAAT;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAc,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAApC;AACAV,IAAAA,SAAS,CAACM,QAAD,CAAT;AACD,GALD;;AAOA,QAAMK,YAAY,GAAGC,KAAK,IAAI;AAC5BC,IAAAA,SAAS;;AACT,QACEZ,aAAa,CAACa,MAAd,CAAqBC,YAAY,IAAI;AACnC,aAAOA,YAAY,KAAKH,KAAK,CAACI,EAA9B;AACD,KAFD,EAEGC,MAHL,EAIE;AACAC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAd,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACA;AACD;;AACDA,IAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmBW,KAAK,CAACI,EAAzB,CAAD,CAAhB;AACAX,IAAAA,cAAc;AACf,GAdD;;AAgBA,MAAIQ,SAAS,GAAG,MAAM;AACpBT,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,aAAZ;;AACA,QAAIE,KAAK,KAAK,EAAd,EAAkB;AAChBe,MAAAA,KAAK,CAAC,UAAD,CAAL;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD,GAPD;;AASA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wHAFF,EAME;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAgCA,KAAhC,CADF,CANF,EAUGJ,MAAM,CAACsB,GAAP,CAAWT,KAAK,IACf,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACI,EAAjB;AAAqB,IAAA,KAAK,EAAEJ,KAA5B;AAAmC,IAAA,YAAY,EAAED,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAVH,CADF;AAgBD,CAzDD;;AA2DA,eAAeb,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport sourceImages from \"./Images\";\nimport Card from \"./Card\";\n\nconst Cards = () => {\n  const [images, setImages] = useState([]);\n  const [clickedImages, setClickedImages] = useState([]);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    shuffleFriends();\n  }, []);\n\n  const shuffleFriends = () => {\n    const newArray = [...sourceImages];\n    newArray.slice();\n    newArray.sort(() => Math.random() - 0.5);\n    setImages(newArray);\n  };\n\n  const onImageClick = image => {\n    increment();\n    if (\n      clickedImages.filter(clickedImage => {\n        return clickedImage === image.id;\n      }).length\n    ) {\n      alert(\"Failed: Try Again!\");\n      setCount(0);\n      setClickedImages([]);\n      return;\n    }\n    setClickedImages([...clickedImages, image.id]);\n    shuffleFriends();\n  };\n\n  let increment = () => {\n    setCount(count + 1);\n    console.log(clickedImages);\n    if (count === 11) {\n      alert(\"You Won!\");\n    }\n    console.log(count);\n  };\n\n  return (\n    <div className='centerContainer'>\n      <div className='title'>Memory Game</div>\n      <div>\n        Instructions: Click all of the cards and win! Sounds easy right? Well\n        you lose if you select one more than once!\n      </div>\n      <div className='pointContainer'>\n        <div className='points'>Points:{count}</div>\n        {/* <div className='points'>Points:{wins}</div> */}\n      </div>\n      {images.map(image => (\n        <Card key={image.id} image={image} onImageClick={onImageClick} />\n      ))}\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}