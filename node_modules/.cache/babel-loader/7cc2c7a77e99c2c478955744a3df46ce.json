{"ast":null,"code":"import _slicedToArray from \"/Users/hofheins/Desktop/projects/hwgame/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js\";\nimport React, { useState, useEffect, useRef, useReducer } from \"react\";\nimport { Images } from \"./Images\";\nexport default function Cards() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const ref = useRef();\n\n  const imageArray = async () => {\n    const res = await {\n      Images\n    };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const game = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n    console.log(image);\n    console.log(ref);\n  };\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSelected = _useState4[0],\n        setSelected = _useState4[1];\n\n  const runme = () => {\n    setSelected(1);\n    console.log(isSelected);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"centerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, image.map(image => React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    ref: ref,\n    value: 0 // onClick={() => {\n    //   game();\n    // }}\n    ,\n    onClick: (() => ref.current, runme()),\n    className: \"cardImage\",\n    key: image.navItemID,\n    src: image.cardImage,\n    alt: image.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), \";\");\n}","map":{"version":3,"sources":["/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js"],"names":["React","useState","useEffect","useRef","useReducer","Images","Cards","image","setImage","ref","imageArray","res","copyarray","game","newarr","slice","sort","Math","random","console","log","isSelected","setSelected","runme","map","current","navItemID","cardImage","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,oBACJL,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACvBM,KADuB;AAAA,QAChBC,QADgB;;AAE9B,QAAMC,GAAG,GAAGN,MAAM,EAAlB;;AAEA,QAAMO,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAM;AAAEN,MAAAA;AAAF,KAAlB;AACA,UAAMO,SAAS,GAAGD,GAAG,CAACN,MAAtB;AACAG,IAAAA,QAAQ,CAACI,SAAD,CAAR;AACD,GAJD;;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,IAAI,GAAG,MAAM;AACjB,UAAMC,MAAM,GAAG,CAAC,GAAGP,KAAJ,CAAf;AACAO,IAAAA,MAAM,CAACC,KAAP;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAY,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC;AACAV,IAAAA,QAAQ,CAACM,MAAD,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACD,GAPD;;AAd8B,qBAuBIR,QAAQ,CAAC,CAAD,CAvBZ;AAAA;AAAA,QAuBvBoB,UAvBuB;AAAA,QAuBXC,WAvBW;;AAyB9B,QAAMC,KAAK,GAAG,MAAM;AAClBD,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACiB,GAAN,CAAUjB,KAAK,IACd;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEE,GADP;AAEE,IAAA,KAAK,EAAE,CAFT,CAGE;AACA;AACA;AALF;AAME,IAAA,OAAO,GAAG,MAAMA,GAAG,CAACgB,OAAV,EAAmBF,KAAK,EAA3B,CANT;AAOE,IAAA,SAAS,EAAC,WAPZ;AAQE,IAAA,GAAG,EAAEhB,KAAK,CAACmB,SARb;AASE,IAAA,GAAG,EAAEnB,KAAK,CAACoB,SATb;AAUE,IAAA,GAAG,EAAEpB,KAAK,CAACqB,IAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,MADF;AAqBD","sourcesContent":["import React, { useState, useEffect, useRef, useReducer } from \"react\";\nimport { Images } from \"./Images\";\n\nexport default function Cards() {\n  const [image, setImage] = useState([]);\n  const ref = useRef();\n\n  const imageArray = async () => {\n    const res = await { Images };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const game = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n    console.log(image);\n    console.log(ref);\n  };\n\n  const [isSelected, setSelected] = useState(0);\n\n  const runme = () => {\n    setSelected(1);\n    console.log(isSelected);\n  };\n\n  return (\n    <div className='centerContainer'>\n      {image.map(image => (\n        <div className='card'>\n          <img\n            ref={ref}\n            value={0}\n            // onClick={() => {\n            //   game();\n            // }}\n            onClick={(() => ref.current, runme())}\n            className='cardImage'\n            key={image.navItemID}\n            src={image.cardImage}\n            alt={image.name}\n          />\n        </div>\n      ))}\n      ;\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}