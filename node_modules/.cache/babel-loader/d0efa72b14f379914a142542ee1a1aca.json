{"ast":null,"code":"import _slicedToArray from \"/Users/hofheins/Desktop/projects/hwgame/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Images } from \"./Images\";\nexport default function Cards() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentScore = _useState4[0],\n        setScore = _useState4[1];\n\n  const _useState5 = useState({\n    image,\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        friend = _useState6[0],\n        setFriend = _useState6[1];\n\n  const handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      rightWrong: \"Glaven!\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  const imageArray = async () => {\n    const res = await {\n      Images\n    };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const shuffleFriends = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"centerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, image.map(image => React.createElement(\"div\", {\n    key: image.name,\n    className: \"card\",\n    onClick: () => {\n      shuffleFriends();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    // ref={ref}\n    className: \"cardImage\",\n    src: image.cardImage,\n    alt: \"hi\",\n    id: image.navItemId // alt={image.name}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/hofheins/Desktop/projects/hwgame/src/components/Cards.js"],"names":["React","useState","useEffect","Images","Cards","image","setImage","currentScore","setScore","topScore","rightWrong","clicked","friend","setFriend","handleReset","setState","state","handleShuffle","imageArray","res","copyarray","shuffleFriends","newarr","slice","sort","Math","random","map","name","cardImage","navItemId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,oBACJH,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACvBI,KADuB;AAAA,QAChBC,QADgB;;AAAA,qBAEGL,QAAQ,CAAC,CAAD,CAFX;AAAA;AAAA,QAEvBM,YAFuB;AAAA,QAETC,QAFS;;AAAA,qBAIFP,QAAQ,CAAC;AACnCI,IAAAA,KADmC;AAEnCE,IAAAA,YAAY,EAAE,CAFqB;AAGnCE,IAAAA,QAAQ,EAAE,CAHyB;AAInCC,IAAAA,UAAU,EAAE,EAJuB;AAKnCC,IAAAA,OAAO,EAAE;AAL0B,GAAD,CAJN;AAAA;AAAA,QAIvBC,MAJuB;AAAA,QAIfC,SAJe;;AAY9B,QAAMC,WAAW,GAAG,MAAM;AACxB,SAAKC,QAAL,CAAc;AACZR,MAAAA,YAAY,EAAE,CADF;AAEZE,MAAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWP,QAFT;AAGZC,MAAAA,UAAU,EAAE,SAHA;AAIZC,MAAAA,OAAO,EAAE;AAJG,KAAd;AAMA,SAAKM,aAAL;AACD,GARD;;AAUA,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAM;AAAEhB,MAAAA;AAAF,KAAlB;AACA,UAAMiB,SAAS,GAAGD,GAAG,CAAChB,MAAtB;AACAG,IAAAA,QAAQ,CAACc,SAAD,CAAR;AACD,GAJD;;AAMAlB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,cAAc,GAAG,MAAM;AAC3B,UAAMC,MAAM,GAAG,CAAC,GAAGjB,KAAJ,CAAf;AACAiB,IAAAA,MAAM,CAACC,KAAP;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAY,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAlC;AACApB,IAAAA,QAAQ,CAACgB,MAAD,CAAR;AACD,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KAAK,CAACsB,GAAN,CAAUtB,KAAK,IACd;AACE,IAAA,GAAG,EAAEA,KAAK,CAACuB,IADb;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACbP,MAAAA,cAAc;AACf,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AACE;AACA,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,GAAG,EAAEhB,KAAK,CAACwB,SAHb;AAIE,IAAA,GAAG,EAAC,IAJN;AAKE,IAAA,EAAE,EAAExB,KAAK,CAACyB,SALZ,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CADH,CADF;AAqBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Images } from \"./Images\";\n\nexport default function Cards() {\n  const [image, setImage] = useState([]);\n  const [currentScore, setScore] = useState(0);\n\n  const [friend, setFriend] = useState({\n    image,\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: []\n  });\n\n  const handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      rightWrong: \"Glaven!\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  const imageArray = async () => {\n    const res = await { Images };\n    const copyarray = res.Images;\n    setImage(copyarray);\n  };\n\n  useEffect(() => {\n    imageArray();\n  }, []);\n\n  const shuffleFriends = () => {\n    const newarr = [...image];\n    newarr.slice();\n    newarr.sort(() => Math.random() - 0.5);\n    setImage(newarr);\n  };\n\n  return (\n    <div className='centerContainer'>\n      {image.map(image => (\n        <div\n          key={image.name}\n          className='card'\n          onClick={() => {\n            shuffleFriends();\n          }}>\n          <img\n            // ref={ref}\n            className='cardImage'\n            src={image.cardImage}\n            alt='hi'\n            id={image.navItemId}\n            // alt={image.name}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}